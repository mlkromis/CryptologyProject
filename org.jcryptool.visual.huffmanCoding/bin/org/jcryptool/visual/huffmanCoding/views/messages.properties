#Eclipse modern messages class
#Mon Mar 31 15:55:01 CEST 2014
HuffmanCodingView_0=Compression/Decompression
HuffmanCodingView_1=Huffman coding is a method for lossless data compression which assigns to each character of the input text a bit sequence of a variable length depending on the frequency of the occurrence of this character. Frequent characters are represented with a short bit sequence; characters occurring rarely have a longer bit sequence. In this way, redundant information is summarized and the required storage space reduced.\n\nIn this tab, you can compress or decompress a text. On the other tabs, you can see the tree structure and the associated, dynamically calculated code table.
HuffmanCodingView_11=Output text
HuffmanCodingView_12=Reset inputs
HuffmanCodingView_13=Huffman tree
HuffmanCodingView_14=Code table
HuffmanCodingView_15=Show path
HuffmanCodingView_16=Huffman Coding
HuffmanCodingView_17=Input text
HuffmanCodingView_18=The selected file is invalid. Please select a text file in ISO-8859-1 format.
HuffmanCodingView_19=Compression completed
HuffmanCodingView_2=Text file (ISO-8859-1)
HuffmanCodingView_20=The compression has been completed. The Huffman tree was drawn and the code table was created.\n\nAdditionally, the compressed data has been stored into a file, which now can be used for decompression.
HuffmanCodingView_21=Decompression completed
HuffmanCodingView_22=The decompression has been completed. The Huffman tree was drawn and the code table was created.
HuffmanCodingView_23=Size of the decompressed file\:\t
HuffmanCodingView_24=bytes
HuffmanCodingView_25=Size of the compressed file\:\t
HuffmanCodingView_26=Compression rate\:\t\t
HuffmanCodingView_27=\nThe compressed file is bigger than the decompressed file.
HuffmanCodingView_28=After compressing a text or after loading a compressed file here the according Huffman tree will be shown.
HuffmanCodingView_29=After compressing a text or after loading a compressed file here the according code table will be shown.
HuffmanCodingView_3=Open file...
HuffmanCodingView_4=File size (in bytes)\:
HuffmanCodingView_5=Input text (editable)
HuffmanCodingView_6=Compress
HuffmanCodingView_7=Decompress
HuffmanCodingView_8=Huffman file (*.huffman)
HuffmanCodingView_9=Open file...
HuffmanCodingView_btnContentFromFile_text=Plaintext from file
HuffmanCodingView_btnExampleText_text=Example text
HuffmanCodingView_btnPfadbernehmen_text=Apply the generated file for the decompression scenario
HuffmanCodingView_codetable_stat_1=Number of characters and paths\: 
HuffmanCodingView_codetable_stat_2=Click on one of the entries in the table below, then the button on the top right will be active. By clicking on this button the Huffman tree will be shown and the corresponding branch will be selected. If no entry is selected, the button is inactive.
HuffmanCodingView_codetable_stat_3=Minimal code length\: 
HuffmanCodingView_codetable_stat_4=Maximal  code length\: 
HuffmanCodingView_codetable_stat_5=Average code length\: 
HuffmanCodingView_codetable_stat_header=Statistics\n
HuffmanCodingView_grpNextSteps_text=Next steps
HuffmanCodingView_grpSzenario_text=Scenario
HuffmanCodingView_inputText=example_en.txt
HuffmanCodingView_tblclmnCharacter_text=Character
HuffmanCodingView_tblclmnCodeLength_text=Code length
HuffmanCodingView_tblclmnCode_text=Code
HuffmanCodingView_tblclmnPropability_text=Probability
ZestLabelProvider_0=Probability\n     
ZestLabelProvider_1=Sum of the probabilities\nof the left and right node
ZestLabelProvider_2=Inner node
ZestLabelProvider_3=Root node
ZestLabelProvider_4=Please click on one of the leafs, then the corresponding branch will be selected\: The branch from the root to the clicked leaf will be highlighted and you can move the branch as needed. Further information can be found in the online help.
ZestLabelProvider_5=Bit sequence to the selected character
