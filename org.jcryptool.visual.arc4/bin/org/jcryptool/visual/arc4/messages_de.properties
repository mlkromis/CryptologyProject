VariablesVisualLabelI = i
VariablesVisualLabelJ = j
VariablesVisualLabelStep = Schritt
WizardPageInvalidHexDigit = ist kein gültiges hexadezimales Zeichen.
WizardPageInputLimitPart1 = Sie haben noch
WizardPageInputLimitPart2 = Hexadezimalzahlen frei, die Sie eingeben können.
InstructionVisualLabel = Zahl der Schritte:
InstructionVisualButton = Ausführen
VectorVisualGroup = Byte-Vektor -- genauere Informationen finden Sie hier im Tooltip (Sprechblase) oder in der Onlinehilfe zu diesem Plug-in.
VectorVisualTool = ARC4 verwendet für die Generierung der Pseudozufallszahlen einen Byte-Vektor der Länge 256. In dem 16*16-Quadrat ist der Byte-Vektor dargestellt. Jede Zelle repräsentiert ein Byte. Sie können live mitverfolgen, wie der Vektor vom Algorithmus bei jedem Schritt verändert wird. Alle Werte sind hexadezimal: Das sonst bei Hexadezimalzahlen übliche Präfix "0x" wird hier aus Gründen der Übersichtlichkeit weggelassen.
InstructionVisualGroup = Steuerung des Algorithmus
InstructionVisualTool = Mit Hilfe dieses Teiles der Oberfläche ist es Ihnen möglich, den Ablauf des Algorithmus zu steueren. Schreiben Sie die Zahl der Schritte die der Algorithmus voranschreiten soll in das Textfeld und klicken Sie dann auf den Button "Ausführen" um die Aktion auszuführen. Nähere Informationen zur Zahl der Schritte erhalten Sie in der Hilfe des Plugins oder in kürzerer Form im Tooltip des Textfeldes.
InstructionVisualInputTool = Mit diesem Feld können Sie auswählen, wieviele Schritte der Algorithmus, wenn Sie auf den Button klicken, machen soll. Der Algorithmus benötigt immer zuerst 256 Schritte für die Initialisierung und dann einen weiteren Schritt für jedes Byte, das verschlüsselt werden soll. In diesem Beispiel werden 16 Byte verschlüsselte, also braucht der Algorithmus insgesamt 256 + 16 = 272 Schritte.
InstructionVisualButtonTool = Mit einem Klick auf diesen Button lassen Sie den Algorithmus um so viele Schritte voranschreiten, wie Sie im Textfeld hinter "Zahl der Schritte" angegeben haben.
VariablesVisualGroup = Variablen
VariablesVisualTool = Dieser Teil der Oberfläche erlaubt es Ihnen die Variablen des Algorithmus während der Ausführung zu beobachten. Außerdem sehen Sie, wie weit der Ablauf des Algorithmus fortgeschritten ist. Informationen zu den mathematischen Formeln, mit denen diese Werte berechnet werden, finden Sie in der Hilfe des Plug-ins.
DatavectorVisualKEYGroup = Schlüssel in hexadezimalem Format
DatavectorVisualKEYTool = Diese Sektion erlaubt Ihnen die Auswahl eines Schlüssels mit dem verschlüsselt werden soll. Wenn Sie keinen Schlüssel auswählen wird ein zufälliger Schlüssel gewählt. Sie können einen Schlüssel nur solange auswählen, bis Sie den Algorithmus gestartet haben. Jede Zelle repräsentiert ein Byte des Schlüssels, das sonst bei Hexadezimalzahlen übliche Präfix "0x" wurde hier aus Gründen der Übersichtlichkeit weggelassen. Mehr Informationen finden Sie in der Hilfe des Plug-ins.
DatavectorVisualENCGroup = Verschlüsselter Text im hexadezimalen Format
DatavectorVisualENCTool = Hier sehen Sie die einzelnen Bytes des verschlüsselten Textes im hexadezimalen Format.
DatavectorVisualPLAINGroup = Klartext im hexadezimalen Format
DatavectorVisualPLAINTool = Diese Sektion erlaubt Ihnen die Auswahl eines Klartextes, der verschlüsselt werden soll. Wenn Sie keinen Klartext auswählen wird ein zufälliger Klartext ausgewählt. Sie können einen Klartext nur solange auswählen, bis Sie den Algorithmus gestartet haben. Jede Zelle repräsentiert ein Byte des Klartexts, das sonst bei Hexadezimalzahlen übliche Präfix "0x" wurde hier aus Gründen der Übersichtlichkeit weggelassen. Mehr Informationen finden Sie in der Hilfe des Plug-ins.
DatavectorVisualRANDGroup = Erzeugte Pseudozufallszahlen im hexadezimalen Format
DatavectorVisualRANDTool = Hier sehen Sie die einzelnen Bytes der erzeugten Pseudozufallszahlen. ARC4 ist eine Stromchiffre, d.h es erzeugt aus einem Schlüssel einen Strom von Pseudozufallszahlen, die dann mit dem Klartext bitweise XOR-verknüpft werden.
DatavectorVisualKEYButton = Auswählen
DatavectorVisualPLAINButton = Auswählen
DatavectorVisualKEYWizard = Schlüsselauswahl Wizard
DatavectorVisualPLAINWizard = Klartextauswahl Wizard
DatavectorVisualKEYButtonTool = Öffnet einen Wizard, der es Ihnen erlaubt, den Schlüssel zu ändern.
DatavectorVisualPLAINButtonTool = Öffnet einen Wizard, der es Ihnen erlaubt, den Klartext zu ändern.
WizardPageDescriptionKey = Bitte geben Sie den Schlüssel, mit dem Sie verschlüsseln möchten, in das Eingabefeld ein. Aus Gründen der Einfachkeit muss der Schlüssel in dieser Visualisierung \nimmer genau 32 Hexzeichen (16 Byte) lang sein. Sonst sind ARC4-Schlüssel zwischen fünf und 256 Byte lang.
WizardPageDescriptionPlain = Bitte geben Sie den Text, den Sie verschlüsseln möchten, in das Eingabefeld ein. Der Klartext muss genau 32 Hexzeichen (16 Byte) lange sein.
WizardPageHexNotification = Die Eingabe erfolgt nur im hexadezimalen Format, d.h. Sie haben die 16 Zeichen 0-9 sowie A-F (bzw. a-f) zur Verfügung.
WizardPageToLong = Sie können nicht mehr als 32 Hexadezimalzeichen (16 Byte) eingeben.
PluginDescription = Dieses Plug-in visualisiert, wie sich die internen Variablen (dargestellt in einer 16*16-Tabelle) des ARC4-Algorithmus (bzw. Spritz) verändern. Sie können den Algorithmus Schritt für Schritt ablaufen lassen oder komplett bis zum Ende (dann ist der gesamte verschlüsselte Text erzeugt). Sie können Klartext und Schüssel selbst eingeben oder die voreingestellten Werte nutzen oder sich zufällige Werte dafür generieren lassen. ARC4 ist eine Stromchiffre, d.h. aus dem Schüssel wird mittels eines Pseudozufallsgenerators auf deterministische Weise eine Folge von Pseudozufallszahlen erzeugt. Die Verschlüsselung erfolgt dann durch XOR-Verknüpfung dieser Zahlenfolge mit dem Klartext. Entschlüsselung funktioniert genau gleich, d.h. man generiert dieselbe Pseudozufallsfolge und verknüpft sie XOR mit dem verschlüsselten Text. In den ersten 256 Schritten werden die internen Variablen initialisiert; danach wird mit jedem weiteren Schritt ein Zufalls-Byte erzeugt und benutzt, um ein Byte des Klartexts zu verschlüsseln. Nach 16 erzeugten Zufallszahlen bzw. insgesamt 272 Schritten ist der komplette Klartextblock aus 16 Byte verschlüsselt. Genauere Informationen zu den einzelnen Teilen erhalten Sie sowohl in der Onlinehilfe des Plug-ins als auch mit den Tooltips zu dem jeweiligen GUI-Element.
InstuctionVisualFinish = Alles verschlüsseln
InstructionVisualFinishTool = Mit einem Klick auf diesen Button lassen Sie den Algorithmus vollständig durchlaufen und sehen sofort das End­er­geb­nis der Verschlüsselung.
PluginDescriptionCaption = ARC4
InstructionVisualRYESText = Änderungen \nhervorheben
InstructionVisualRYESTool = Einstellung, ob Änderungen im Byte-Vektor farblich hervorgehoben werden sollen
InstructionVisualRNOText = Änderungen nicht \nhervorheben
InstructionVisualRNOTool = Einstellung, ob Änderungen im Byte-Vektor farblich hervorgehoben werden sollen
CompositeResetText = Zähler auf Null
CompositeResetTool = Mit einem Klick auf diesen Button können Sie den Schrittzähler des Plug-ins auf Null zurücksetzten und damit den Algorithmus neu starten.
CompositeSettingsText = Diverse Einstellungen
CompositeSettingsTool = Dieser Bereich ermöglicht es ihnen die farbliche Hervorhebung von Änderungen im Byte-Vektor aus oder an zu schalten. Außerdem erlaubt er ihnen das Plug-in zurückzusetzen.
CompositeAlgFinishTitle = Verschlüsselung fertig!
CompositeAlgFinishText = Der Algorithmus ist fertig, d.h. alle 272 Schritte wurden ausgeführt und die 16 Byte Klartext wurden vollständig verschlüsselt. Nochmals auf den "Ausführen"- oder den "Alles verschlüsseln"-Button zu klicken, bewirkt nun nichts anderes mehr, als diese Meldung anzuzeigen. Sie können nun entweder (nachdem Sie dieses Fenster mit einem Klick auf OK geschlossen haben) den Schrittzähler auf 0 zurücksetzen und sich die soeben durchgeführte Verschlüsselung erneut ansehen, oder Sie wählen sich einen neuen Schlüssel und einen neuen Klartext und verschlüsseln erneut.
CompositeSettingsRandText = Randomisieren
CompositeSettingsRandTool = Mit einem Klick auf diesen Button werden Schlüssel und Klartext mit neuen Zufallswerten gefüllt. Sie können diese Aktion nur ausführen, wenn Sie den Algorithmus noch nicht gestartet haben.
VariablesVisualDec = Dezimal
VariablesVisualHex = Hexadezimal
WizardPageInputFull = Sie können nicht mehr als 32 hexadezimal Zeichen (16 Byte) eingeben.
VariableW = w
CompositeWTool = Spritz erfordert einen weiteren Parameter w. Bei ARC4 ist w immer eins, bei Spritz kann w jede zur Länge des Byte-Vektors teilerfremde Zahl sein.
CompositeARC4 = ARC4
CompositeARC4Tool = ARC4, so wie er 1994 bekannt geworden ist.
CompositeSPRITZ = Spritz
CompositeSPRITZTool = Spritz ist eine verbesserte Version von ARC4, die am 27.10.2014 von Ronald Rivest und Jacob Schuldt vorgestellt wurde. Die ersten 256 Schritte (das Setup des Byte-Vektors) laufen genau wie bei ARC4 ab, für die Generierung der Pseudozufallszahlen wird allerdings eine modifizierte Funktion benutzt, die eine dritte Variable w in den Algorithmus einbezieht. Details dazu finden Sie in der Onlinehilfe dieses Plugins.
AlgSelectionBoxText = Auswahl des Algorithmus
AlgSelectionBoxTool = Aufgrund der Schwächen im ARC4-Algorithmus wurde von verschiedener Seite versucht, modifizierte Versionen des Algorithmus vorzuschlagen. Diese Plugin implementiert sowohl die Grundform ARC4 als auch die Variante Spritz.
CopyToClipboard = In Zwischenablage kopieren
CopyToClipboardTool = Hiermit können Sie den Inhalt dieses Datenvektors, im hexadezimalen Zahlenformat, in die Zwischenablage Ihres Systems kopieren.
KeySelectionWizardHeading = Schlüssel Auswahl
PlainSelectionWizardHeading = Klartext Auswahl