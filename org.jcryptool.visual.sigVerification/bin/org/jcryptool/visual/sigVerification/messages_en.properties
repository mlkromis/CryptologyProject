#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)
#Eclipse messages class for SigVerComposite

ModelComposite_Choose = Please enter the new validity date below.
ModelComposite_btnChainM = Chain model
ModelComposite_btnNewResult = Recalculate
ModelComposite_btnReset = Back
ModelComposite_btnShellM = Shell model

#Model
ModelComposite_description = This visualization shows how the usage of different validity models (Shell- and Chain model) affects the validity of certificates. Please note that this models are not related to the signature verification per se and that this user interface serves only for learning purposes. \r\n\r\nThe button "Recalculate" will be deactivated if the given date is invalid. In addition you can restore the default certificates by clicking on the button "Back".
ModelComposite_lblHeader = Validity models visualization
ModelComposite_lblTitle = Validity models visualization
ModelComposite_lbllevel2 = Level 2 certificate
ModelComposite_lbllevel3 = User certificate
ModelComposite_lblroot = Root certificate
SigVerComposite_MessageTitleReturn = Information
SigVerComposite_btnAddInput = Choose input
SigVerComposite_btnDecrypt = Verify signature

#Buttons
SigVerComposite_btnHash = Choose hash method
SigVerComposite_btnReset = Step back
SigVerComposite_btnResult = Show result
SigVerComposite_btnReturn = Return to JCT-PKI
SigVerComposite_btnSignature = Verify signature
SigVerComposite_description = This visualization shows how to verify a digital signature for a chosen document. A digital signature is used to verify the authenticity and integrity.
SigVerComposite_lblHeader = Signature verification
SigVerComposite_lblProgress = Step %s of 4
SigVerComposite_lblPubKey = Public Key
SigVerComposite_lblTitle = Signature verification
SigVerComposite_menu = Select all

#Result true/false description
SigVerComposite_resutFalseDescription = Verification failed\r\n\r\n
SigVerComposite_resutTrueDescription = Verification successful h\r\n\r\n

#The TabFolder
SigVerComposite_tbtmNewItem_0 = Step 1
SigVerComposite_tbtmNewItem_1 = Step 2
SigVerComposite_tbtmNewItem_2 = Step 3
SigVerComposite_tbtmNewItem_3 = Step 4

SigVerComposite_txtDescriptionOfStep1 = Choose input\r\n\r\nYou can choose which document you want to verify. To start the signature verification please click on the button "Choose input". Follow the instructions afterwards.
SigVerComposite_txtDescriptionOfStep2 = Choose hash method\r\nInformation: This step is not needed for a verification. It's only included out of necessity to insure compatibility with Signature-Demo.\r\nA hash method is an algorithm that converts a data set of variable length to a data set of fixed length. Normally the hash is the value getting signed because a hash is normally much shorter than a file. In order to verify a signature you first calculate a hash again which will then be compared to the hash of the document.\r\nPlease select the algorithm that was used to create the signature.
SigVerComposite_txtDescriptionOfStep3 = Verify result\r\n\r\nDecrypt your signed document. The decryption process is dependent on the used signature algorithm. The signature was created using the private key. The public key is used in order to decrypt signature.
SigVerComposite_txtDescriptionOfStep4 = Show result\r\n\r\nThe signature not helps to insure that the authenticity of the sender and that there was nothing changed within the document. If the verification succeeded you will see a green tick and if not you will see a red cross. For more information please click on "Show result".
